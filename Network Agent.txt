vowels=['A','I']
personality=['F','S']
def make_agent(vowel,personalities):
    return(vowel,personalities)
agentone=make_agent(vowels,personality)
print(agentone)

def make_agent_population_identity(N):
    population=[]
    for i in range(N):
        agent=make_agent(vowels[1],personality[0])
        population.append(agent)
    return population
m=make_agent_population_identity(5)
print(m)

import random
def make_population(N):
    population=[]
    for i in range(N):
        v=random.choice(vowels)
        p=random.choice(personality)
        agent=make_agent(v,p)
        population.append(agent)
    return population   
a=make_population(10)
print(a)



def make_population_(N):
    population=[]
    for i in range(N):
        v=random.randint(0,1)
        p=random.randint(0,1)
        agent=make_agent(vowels[v],personality[p])
        population.append(agent)
    return population
c=make_population(5)
print(c)

def count(population):
    t=0
    for agent in population:
        if agent[0]=='a':
            t+=1
        return t/len(population)
f=count(make_population(4))
print(f)

from numpy.random import choice
def choose_pair(population):
    i=random.randint(0,len(population-1))
    j=random.randint(0,len(population-1))
    while i==j:
        j=random.randint(0,len(population-1))
    return population[i],population[j]
pop=make_population(6)
print(pop)


from copy import deepcopy
def interact_test(listener,producer):
    if listener[0]==producer[0]:
        return listener
    if listener[1]=='s':
        return listener
    else:
        listener[0]==deepcopy(producer[0])
        return listener

randomlistener,randomproducer=choose_pair(make_population(8))
print('The listener is',randomlistener)
print('the producer is',randomproducer)
updated_listener=interact_test(randomlister,randomproducer)
print(updated_listener)